---

- debug:
    var: __manala_apt_repositories
#
# - name: repositories > Repositories
#   apt_repository:
#     repo:         "{{ item.value.source }}"
#     state:        "{{ item.value.state|default('present') }}"
#     update_cache: yes
#   with_dict: "{{ __manala_apt_repositories }}"
#
# - name: repositories > Exclusive - find files
#   command: "find -type f -name '*.list' -printf '%P\n'"
#   args:
#     chdir: "{{ manala_apt_repositories_dir }}"
#   changed_when: false
#   register: __manala_apt_repositories_find_output
#   when: manala_apt_repositories_exclusive
#
# # Here come the tricky part
# # Simulate what file name ansible apt_repository module will give
# # Something like "deb http://nginx.org/packages/debian/ wheezy nginx" -> "nginx_org_packages_debian.list"
# - name: repositories > Exclusive - remove files
#   file:
#     path:  "{{ manala_apt_repositories_dir }}/{{ item }}"
#     state: absent
#   when: "{{
#     manala_apt_repositories_exclusive
#     and (
#       item not in __manala_apt_repositories.keys()
#         |map('regex_replace', '^deb https?:\\/\\/([^ ]+)[ ].*$', '\\1')
#         |map('replace', '.', ' ')
#         |map('replace', '/', ' ')
#         |map('trim')
#         |map('replace', ' ', '_')
#         |map('regex_replace', '(.*)', '\\1.list')
#         |list
#     )
#   }}"
#   with_items: "{{ __manala_apt_repositories_find_output.stdout_lines|default([]) }}"
